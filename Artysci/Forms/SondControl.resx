<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>